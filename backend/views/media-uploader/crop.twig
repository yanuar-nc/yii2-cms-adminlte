<div class="row crop">
    <div class="col-md-9">
        <div id="crop__Box">
            {# <button id="crop__button" class="btn btn-flat bg-maroon"><i class="fa fa-check"></i> Crop</button> #}
            <img id="cropper__Image" class='thumbnail-img' src="{{ baseUrl }}/{{ folder.directory }}/{{ file.id }}/{{ file.name }}" width="" style="" />


        </div>
    </div>
    <div class="col-md-3">
        {% set form = active_form_begin({'id': 'cropper__Form'}) %}
            <div class="cropper__preview"></div>
            <br>
            <input type="hidden" name="_csrf" value="{{ app.request.csrfToken }}">
            <input type="hidden" id="x"  name="x" />
            <input type="hidden" id="y"  name="y" />
            <input type="hidden" id="w"  name="w"/>
            <input type="hidden" id="h"  name="h"/>
            <input type="submit" value="Save!" class="btn bg-orange btn-lg btn-flat btn-block" id="cropper__Save">
        {{ active_form_end() }}
    </div>

</div>


{% set js %}



    function each(arr, callback) {
        var length = arr.length;
        var i;

        for (i = 0; i < length; i++) {
            callback.call(arr, arr[i], i, arr);
        }

        return arr;
    }

    window.addEventListener('DOMContentLoaded', function () {
        var image = document.querySelector('#cropper__Image');
        var previews = document.querySelectorAll('.cropper__preview');
        var cropper = new Cropper(image, {
            zoomable: false,
            ready: function () {
                var clone = this.cloneNode();

                clone.className = ''
                clone.style.cssText = (
                    'display: block;' +
                    'width: 100%;' +
                    'min-width: 0;' +
                    'min-height: 0;' +
                    'max-width: none;' +
                    'max-height: none;'
                );

                each(previews, function (elem) {
                    elem.appendChild(clone.cloneNode());
                });
             },
            aspectRatio: {{ ratio }},
            crop: function (e) {
                var data = e.detail;
                var cropper = this.cropper;
                var imageData = cropper.getImageData();
                var previewAspectRatio = data.width / data.height;
                showCoords(data)

                each(previews, function (elem) {
                    var previewImage = elem.getElementsByTagName('img').item(0);
                    var previewWidth = elem.offsetWidth;
                    var previewHeight = previewWidth / previewAspectRatio;
                    var imageScaledRatio = data.width / previewWidth;

                    elem.style.height = previewHeight + 'px';
                    previewImage.style.width = imageData.naturalWidth / imageScaledRatio + 'px';
                    previewImage.style.height = imageData.naturalHeight / imageScaledRatio + 'px';
                    previewImage.style.marginLeft = -data.x / imageScaledRatio + 'px';
                    previewImage.style.marginTop = -data.y / imageScaledRatio + 'px';
                });
            }
        });
    });
    function showCoords(c) { // show all coords
        $('#x').val(c.x);
        $('#y').val(c.y);
        $('#w').val(c.width);
        $('#h').val(c.height);
    }
{% endset %}

{{ this.registerJs(js) }}
{{ this.registerJsFile( baseUrl ~ '/backend/plugins/cropper/cropper.min.js', {'position': 3, 'depends': '\\yii\\web\\YiiAsset'}) }}
 {{ this.registerCssFile( baseUrl ~ '/backend/plugins/cropper/cropper.min.css', {'position': 3}) }}
